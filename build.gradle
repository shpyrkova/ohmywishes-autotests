plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.21.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:5.10.0",
            "com.codeborne:selenide:6.19.0",
            'org.slf4j:slf4j-simple:2.0.7',
            "org.assertj:assertj-core:3.25.1",
            'org.aeonbits.owner:owner:1.0.4',
            "io.rest-assured:rest-assured:5.3.1",
            "org.assertj:assertj-core:3.25.1",
            'com.fasterxml.jackson.core:jackson-databind:2.13.3',
            'com.fasterxml.jackson.core:jackson-core:2.13.3',
            'com.fasterxml.jackson.core:jackson-annotations:2.13.3',
            "com.github.javafaker:javafaker:1.0.2",
            "io.appium:java-client:8.6.0",
            "commons-io:commons-io:2.11.0"
    )
}

tasks.withType(Test).configureEach {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task android_tests(type: Test) {
    useJUnitPlatform {
        includeTags("mobile")
    }
}

task web_tests(type: Test) {
    useJUnitPlatform {
        includeTags("web")
    }
}

task api_tests(type: Test) {
    useJUnitPlatform {
        includeTags("api")
    }
}

task for_jenkins(type: Test) {
    useJUnitPlatform {
        includeTags("web", "api")
    }
}